{"ast":null,"code":"import store from\"../../store/store\";import{setMessages}from\"../../store/actions/chatActions\";export var updateDirectChatHistoryIfActive=function updateDirectChatHistoryIfActive(data){var _store$getState$chat$;var participants=data.participants,messages=data.messages;// find id of user from token and id from active conversation\nvar receiverId=(_store$getState$chat$=store.getState().chat.chosenChatDetails)===null||_store$getState$chat$===void 0?void 0:_store$getState$chat$.id;var userId=store.getState().auth.userDetails._id;if(receiverId&&userId){var usersInCoversation=[receiverId,userId];updateChatHistoryIfSameConversationActive({participants:participants,usersInCoversation:usersInCoversation,messages:messages});}};var updateChatHistoryIfSameConversationActive=function updateChatHistoryIfSameConversationActive(_ref){var participants=_ref.participants,usersInCoversation=_ref.usersInCoversation,messages=_ref.messages;var result=participants.every(function(participantId){return usersInCoversation.includes(participantId);});if(result){store.dispatch(setMessages(messages));}};","map":{"version":3,"names":["store","setMessages","updateDirectChatHistoryIfActive","data","participants","messages","receiverId","getState","chat","chosenChatDetails","id","userId","auth","userDetails","_id","usersInCoversation","updateChatHistoryIfSameConversationActive","result","every","participantId","includes","dispatch"],"sources":["/Users/inmac/Downloads/Discord-Client/src/shared/utils/chat.js"],"sourcesContent":["import store from \"../../store/store\";\r\nimport { setMessages } from \"../../store/actions/chatActions\";\r\n\r\nexport const updateDirectChatHistoryIfActive = (data) => {\r\n  const { participants, messages } = data;\r\n\r\n  // find id of user from token and id from active conversation\r\n  const receiverId = store.getState().chat.chosenChatDetails?.id;\r\n  const userId = store.getState().auth.userDetails._id;\r\n\r\n  if (receiverId && userId) {\r\n    const usersInCoversation = [receiverId, userId];\r\n\r\n    updateChatHistoryIfSameConversationActive({\r\n      participants,\r\n      usersInCoversation,\r\n      messages,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateChatHistoryIfSameConversationActive = ({\r\n  participants,\r\n  usersInCoversation,\r\n  messages,\r\n}) => {\r\n  const result = participants.every(function (participantId) {\r\n    return usersInCoversation.includes(participantId);\r\n  });\r\n\r\n  if (result) {\r\n    store.dispatch(setMessages(messages));\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,mBAAmB,CACrC,OAASC,WAAW,KAAQ,iCAAiC,CAE7D,MAAO,IAAMC,gCAA+B,CAAG,QAAlCA,gCAA+B,CAAIC,IAAI,CAAK,2BACvD,GAAQC,aAAY,CAAeD,IAAI,CAA/BC,YAAY,CAAEC,QAAQ,CAAKF,IAAI,CAAjBE,QAAQ,CAE9B;AACA,GAAMC,WAAU,wBAAGN,KAAK,CAACO,QAAQ,EAAE,CAACC,IAAI,CAACC,iBAAiB,gDAAvC,sBAAyCC,EAAE,CAC9D,GAAMC,OAAM,CAAGX,KAAK,CAACO,QAAQ,EAAE,CAACK,IAAI,CAACC,WAAW,CAACC,GAAG,CAEpD,GAAIR,UAAU,EAAIK,MAAM,CAAE,CACxB,GAAMI,mBAAkB,CAAG,CAACT,UAAU,CAAEK,MAAM,CAAC,CAE/CK,yCAAyC,CAAC,CACxCZ,YAAY,CAAZA,YAAY,CACZW,kBAAkB,CAAlBA,kBAAkB,CAClBV,QAAQ,CAARA,QACF,CAAC,CAAC,CACJ,CACF,CAAC,CAED,GAAMW,0CAAyC,CAAG,QAA5CA,0CAAyC,MAIzC,IAHJZ,aAAY,MAAZA,YAAY,CACZW,kBAAkB,MAAlBA,kBAAkB,CAClBV,QAAQ,MAARA,QAAQ,CAER,GAAMY,OAAM,CAAGb,YAAY,CAACc,KAAK,CAAC,SAAUC,aAAa,CAAE,CACzD,MAAOJ,mBAAkB,CAACK,QAAQ,CAACD,aAAa,CAAC,CACnD,CAAC,CAAC,CAEF,GAAIF,MAAM,CAAE,CACVjB,KAAK,CAACqB,QAAQ,CAACpB,WAAW,CAACI,QAAQ,CAAC,CAAC,CACvC,CACF,CAAC"},"metadata":{},"sourceType":"module"}